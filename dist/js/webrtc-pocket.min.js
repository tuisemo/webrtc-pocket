
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global['bundle-name'] = factory());
}(this, (function () { 'use strict';

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var WebRTC = function WebRTC(_ref) {
    var _this = this;

    var video = _ref.video;

    _classCallCheck(this, WebRTC);

    this.video = video;
    navigator.mediaDevices.getUserMedia({
      video: true,
      audio: false
    }).then(function (stream) {
      _this.video.srcObject = stream;

      _this.video.play();
    })["catch"](function (err) {
      console.log("An error occured! ".concat(err));
    });
  };

  return WebRTC;

})));
